/* CSS reset */
html {
	scroll-behavior: smooth;
	box-sizing: border-box;
	scrollbar-gutter: stable;
}

*,
*:before,
*:after {
	box-sizing: inherit;
}

// Use where to remove specificity
:where(body, h1, h2, h3, h4, h5, h6, p, a, ol, ul, button) {
	margin: 0;
	padding: 0;
	font-weight: inherit;
	font-size: inherit;
	font-family: inherit;
	color: currentColor;
}

// Use where to remove specificity
:where(ol, ul) {
	list-style-type: none;
}

img {
	max-width: 100%;
	height: auto;
	vertical-align: middle;
	font-style: italic;
}

/* General styles */
:root {
	// Colours
	--black: hsl(231, 23%, 12%);
	--black-hover: hsl(231, 23%, 27%);
	--white: hsl(0, 0%, 98%);
	--white-hover: hsl(0, 0%, 83%);
	--sky-blue: hsl(212, 97%, 85%);
	--yellow-1: hsl(52, 98%, 78%);
	--yellow-2: hsl(52, 98%, 48%);
	--yellow-3: hsl(52, 100%, 50%);
	--blue: hsl(223, 100%, 33%);
	--red: hsl(349, 100%, 43%);
	--purple: hsl(259, 79%, 50%);
	--green: hsl(117, 36%, 49%);

	// Svg colors
	--cloud: hsl(0, 0%, 98%);
	--cloud-dark: hsl(231, 23%, 42%);

	//Spotify colours
	--spotify-green: hsl(141, 76%, 48%);
	--progress: var(--white);
	--timeline: hsl(0, 0%, 37%);

	// Display
	--border-radius: 0.67rem;
	--page-width: min(100vw - 1rem, 80rem);

	// Animation
	--transition: cubic-bezier(0.22, 0.61, 0.36, 1);
	--duration: 300ms;
	--rm-translation: 70%;
}

:root {
	// Light theme settings
	--background: var(--sky-blue);
	--inverse: var(--white);
	--hover: var(--white-hover);
	--text: var(--black);
	--hover-inverse: var(--black-hover);
	--outline: var(--red);
	--card: var(--white);
	--play-state: paused;

	// Manually set since think normal matches OS
	color-scheme: light;
}

:root[data-theme='dark'] {
	// Dark theme settings
	--background: var(--black);
	--inverse: var(--black);
	--text: var(--white);
	--hover: var(--black-hover);
	--hover-inverse: var(--white-hover);
	--outline: var(--red);
	--card: var(--black-hover);

	--rm-translation: 37.5%;

	// Update browser color-scheme
	color-scheme: dark;
}

:root[data-motion='no-preference'] {
	--play-state: running;
}

body {
	font-family: 'Poppins', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu,
		Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
	line-height: 1.5;
	text-rendering: optimizeSpeed;

	color: var(--text);
	background-color: var(--background);
	overflow-x: hidden;
}

body::before {
	content: '';
	position: fixed;
	inset: -4rem -2.5rem auto;
	height: 10rem;
	filter: blur(1rem);
	box-shadow: inset 0rem 0rem 25rem 5rem var(--background);
	z-index: 3;

	contain: content;
}

body > div {
	min-height: 100vh;
	min-height: 100svh;
	display: grid;
	grid-template-rows: auto 1fr auto;
	overflow-x: clip;
}

main {
	width: var(--page-width);
	margin-inline: auto;
	font-size: clamp(1.125rem, 3.5vw, 1.375rem);
	margin-top: 1rem;
}

section,
article {
	max-width: 72ch;
	margin: auto;
}

button {
	cursor: pointer;
}

h1 {
	font-size: 3em;
	font-weight: 700;
}

h2 {
	font-size: 2em;
	font-weight: 600;
}

h3 {
	font-weight: 600;
}

:target {
	scroll-margin: 10rem;
}

:focus {
	outline: none;
}

:focus-visible {
	outline: 0.15em solid var(--outline);
	outline-offset: 0.15em;
}

a:focus-visible {
	border-radius: calc(0.5 * var(--border-radius));
}

.text-error {
	color: var(--red);
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

// Use where to remove specificity
:where(.prose) {
	text-wrap: pretty;

	> :not(h1, h2, h3, h4, h5, h6, div) + * {
		margin-top: 0.75em;
	}

	.lazy-img {
		margin-top: 0;
	}

	h1 {
		font-size: 2em;
	}

	h2 {
		font-size: 1.3em;
	}

	h3 {
		font-size: 1em;
	}

	:where(ol, ul) {
		list-style: revert;
		margin-left: 1em;

		li + li {
			margin-top: 0.375em;
		}

		::marker {
			font-weight: 600;
		}
	}

	blockquote::before,
	blockquote::after {
		color: var(--text);
		font-size: 3em;
		line-height: 0.1em;
	}

	blockquote::before {
		content: open-quote;
		margin-right: 0.25em;
	}

	blockquote::after {
		content: close-quote;
		margin-left: 0.125em;
	}

	blockquote p {
		display: inline;
	}

	hr {
		border-color: var(--text);
	}

	pre {
		white-space: pre-wrap;
		word-break: break-all;
	}

	small {
		color: var(--hover-inverse);
	}

	img,
	iframe {
		width: 100%;
		border-radius: var(--border-radius);
		margin-top: 0.75em;
	}

	div.lazy-img {
		margin-block: 0.75em;
	}

	iframe {
		aspect-ratio: 16 / 9;
	}
}

:lang(en) .prose blockquote::before,
:lang(en) .prose blockquote::after {
	vertical-align: -0.4em;
}

:lang(fr) .prose blockquote::before,
:lang(fr) .prose blockquote::after {
	vertical-align: -0.2em;
}

@media only screen and (min-width: 60rem) {
	:root {
		--page-width: min(100vw - 3rem, 80rem);
		--rm-translation: min(50vw, 50%);
	}

	main {
		margin-top: 2.5rem;
	}
}
